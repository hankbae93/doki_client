name: Build and Deploy to GCP

on:
  push:
    branches:  [ "main" ]

jobs:
  build:
    name: Doki API Action
    runs-on: ubuntu-latest
    steps:
#      - name: Checkout Branch
#        uses: actions/checkout@v3
#
#      - name: Set up Docker build
#        id: buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Docker Login
#        uses: docker/login-action@v2.0.0
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Build Docker Image
#        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/doki-frontend:latest .
#
#      - name: Push Docker Image to Hub
#        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/doki-frontend:latest


      - name: SSH into GCP VM and Deploy
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.GCP_SSH_KEY }}
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_VM_USERNAME }}
          port: 22
          script: |
             cat .env
#            sudo echo "${{ secrets.ENV_PRODUCTION }}" > .env
#            cat .env
#
#            if sudo docker ps -a | grep -q 'container-3000'; then
#            sudo docker rm -f container-3000
#            fi
#            sudo docker run --name container-3000 --env-file ./.env -d -p 3000:3000 ${{ secrets.DOCKERHUB_USERNAME }}/doki-fronted:latest
#            sleep 10
#
#            if sudo docker ps -a | grep -q 'container-3001'; then
#            sudo docker rm -f container-3001
#            fi
#            sudo docker run --name container-3001 --env-file ./.env -d -p 3001:3001 ${{ secrets.DOCKERHUB_USERNAME }}/doki-fronted:latest
#            sleep 10
#
#            sudo docker ps

#      - name: Send Build Success Message
#        uses: appleboy/telegram-action@master
#        if: success()
#        with:
#          to: ${{ secrets.TELEGRAM_CHAT_ID }}
#          token: ${{ secrets.TELEGRAM_TOKEN }}
#          format: markdown
#          message: |
#            Author: ${{github.actor}}
#
#            Status: ðŸ˜š **Success**
#
#            Commit message: ${{ github.event.commits[0].message }}
#
#            [See changes](https://github.com/${{ github.repository }}/commit/${{github.sha}})
#
#      - name: Send Build Failure Message
#        uses: appleboy/telegram-action@master
#        if: failure()
#        with:
#          to: ${{ secrets.TELEGRAM_CHAT_ID }}
#          token: ${{ secrets.TELEGRAM_TOKEN }}
#          format: markdown
#          message: |
#            Author: ${{github.actor}}
#
#            Status: ðŸ˜± **Failure**
#
#            Commit message: ${{ github.event.commits[0].message }}
#
#            [link](https://github.com/${{ github.repository }}/actions)
     
